{
    "description": "This service monitors imageboards such as Danbooru, Konachan and others and pushes all posts to private Telegram channels with inline keyboard buttons.",
    "type": "project",
    "license": "MIT",
    "authors": [
        {
            "name": "Petr Flaks",
            "email": "lithx@yandex.com"
        }
    ],
    "require": {
        "php": ">=7.2",
        "ext-ctype": "*",
        "ext-curl": "*",
        "ext-iconv": "*",
        "ext-json": "*",
        "desu-project/chanbooru-interface": "^0.7.2",
        "desu-project/danbooru-sdk": "^0.6.1",
        "doctrine/annotations": "^1.6",
        "doctrine/doctrine-bundle": "^1.9",
        "doctrine/orm": "^2.6",
        "myclabs/php-enum": "^1.6",
        "ramsey/uuid-doctrine": "^1.4",
        "spatie/emoji": "^1.0",
        "symfony/console": "^4.1",
        "symfony/framework-bundle": "^4.1",
        "symfony/lock": "^4.1",
        "symfony/messenger": "^4.1",
        "symfony/monolog-bundle": "^3.3",
        "symfony/serializer": "^4.1",
        "symfony/yaml": "^4.1",
        "telegram-bot/api": "^2.3"
    },
    "require-dev": {
        "friendsofphp/php-cs-fixer": "^2.12",
        "phpstan/phpstan": "^0.10.2",
        "phpstan/phpstan-symfony": "^0.10.1",
        "slevomat/coding-standard": "^4.6",
        "squizlabs/php_codesniffer": "^3.3",
        "symfony/dotenv": "^4.1",
        "symfony/web-server-bundle": "^4.1"
    },
    "config": {
        "preferred-install": {
            "*": "dist"
        },
        "sort-packages": true
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        },
        "files": [
            "src/constants.php",
            "src/helpers.php"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Tests\\": "tests/"
        }
    },
    "replace": {
        "symfony/polyfill-ctype": "*",
        "symfony/polyfill-iconv": "*",
        "symfony/polyfill-php71": "*",
        "symfony/polyfill-php70": "*",
        "symfony/polyfill-php56": "*"
    },
    "scripts": {
        "post-install-cmd": [
            "bin/console cache:clear"
        ],
        "post-update-cmd": [
            "bin/console cache:clear"
        ],
        "app:fix-cs": [
            "vendor/bin/php-cs-fixer fix --config=.php_cs --verbose --show-progress=dots",
            "vendor/bin/phpcbf --standard=ruleset.xml -p"
        ],
        "app:lint": [
            "@app:lint-php-cs-fixer",
            "@app:lint-codesniffer",
            "@app:lint-yaml"
        ],
        "app:lint-php-cs-fixer": [
            "vendor/bin/php-cs-fixer fix --config=.php_cs --verbose --show-progress=dots --dry-run"
        ],
        "app:lint-codesniffer": [
            "vendor/bin/phpcs --standard=ruleset.xml -p"
        ],
        "app:lint-yaml": [
            "yamllint --config-file=.yamllint .travis.yml .yamllint phpstan.neon config"
        ],
        "app:recreate-db": [
            "php bin/console cache:clear",
            "php bin/console doctrine:database:drop --force --if-exists",
            "php bin/console doctrine:database:create",
            "php bin/console doctrine:schema:update --force"
        ],
        "app:test": [
            "php bin/console cache:clear --env=test",
            "php -d memory_limit=2048M vendor/bin/phpunit --configuration phpunit.xml"
        ],
        "app:test-with-coverage": [
            "php bin/console cache:clear --env=test",
            "php -d memory_limit=2048M vendor/bin/phpunit --configuration phpunit.xml --coverage-text --colors=never"
        ],
        "app:analyze-phpstan": [
            "php -d memory_limit=2048M vendor/bin/phpstan analyse --configuration=phpstan.neon --no-interaction"
        ]
    },
    "scripts-descriptions": {
        "app:fix-cs": "Fix code style in PHP files.",
        "app:lint": "Check PHP files for style errors without fixing it (same as 'app:fix-cs' script, but without fixing).",
        "app:lint-php-cs-fixer": "Check PHP files for style errors using PHP-CS-Fixer rules.",
        "app:lint-codesniffer": "Check PHP files for style errors using CodeSniffer rules.",
        "app:lint-yaml": "Check YAML files for style errors using yamllint rules.",
        "app:recreate-db": "Recreate database, load fixtures and files.",
        "app:test": "Run tests.",
        "app:test-with-coverage": "Run tests with coverage report.",
        "app:analyze-phpstan": "Runs static analysis on PHP code with PHPStan."
    },
    "conflict": {
        "symfony/symfony": "*"
    },
    "extra": {
        "violinist": {
            "blacklist": [],
            "allow_updates_beyond_constraint": 1,
            "update_with_dependencies": 1
        }
    }
}
